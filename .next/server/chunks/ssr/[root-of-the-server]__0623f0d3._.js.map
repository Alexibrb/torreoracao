{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {config} from 'dotenv';\n\nconfig();\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AACA;;;;AAEA,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD;AAEE,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/summarize-prayer-schedule-and-send-whatsapp.ts"],"sourcesContent":["// SummarizePrayerScheduleAndSendWhatsapp flow\n'use server';\n/**\n * @fileOverview A flow to summarize the prayer schedule and send it to a WhatsApp number.\n *\n * - summarizePrayerScheduleAndSendWhatsapp - A function that handles the summarization and sending process.\n * - SummarizePrayerScheduleAndSendWhatsappInput - The input type for the summarizePrayerScheduleAndSendWhatsapp function.\n * - SummarizePrayerScheduleAndSendWhatsappOutput - The return type for the summarizePrayerScheduleAndSendWhatsapp function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SummarizePrayerScheduleAndSendWhatsappInputSchema = z.object({\n  prayerSchedule: z.string().describe('A table containing the prayer schedule with names and times.'),\n  whatsappNumber: z.string().describe('The WhatsApp number to send the summary to.'),\n});\nexport type SummarizePrayerScheduleAndSendWhatsappInput = z.infer<typeof SummarizePrayerScheduleAndSendWhatsappInputSchema>;\n\nconst SummarizePrayerScheduleAndSendWhatsappOutputSchema = z.object({\n  success: z.boolean().describe('Whether the summary was successfully sent to the WhatsApp number.'),\n  message: z.string().describe('A message indicating the status of the operation.'),\n});\nexport type SummarizePrayerScheduleAndSendWhatsappOutput = z.infer<typeof SummarizePrayerScheduleAndSendWhatsappOutputSchema>;\n\nexport async function summarizePrayerScheduleAndSendWhatsapp(input: SummarizePrayerScheduleAndSendWhatsappInput): Promise<SummarizePrayerScheduleAndSendWhatsappOutput> {\n  return summarizePrayerScheduleAndSendWhatsappFlow(input);\n}\n\nconst summarizePrayerSchedulePrompt = ai.definePrompt({\n  name: 'summarizePrayerSchedulePrompt',\n  input: {schema: SummarizePrayerScheduleAndSendWhatsappInputSchema},\n  output: {schema: z.string()},\n  prompt: `You are an assistant that summarizes a prayer schedule and prepares it for sending to a WhatsApp number.\n\n  Summarize the following prayer schedule in a concise and informative message:\n  {{prayerSchedule}}\n  Make sure to thank everyone for their participation.`,\n});\n\nconst sendWhatsappMessage = ai.defineTool({\n  name: 'sendWhatsappMessage',\n  description: 'Sends a message to a WhatsApp number.',\n  inputSchema: z.object({\n    phoneNumber: z.string().describe('The phone number to send the message to.'),\n    message: z.string().describe('The message to send.'),\n  }),\n  outputSchema: z.boolean(),\n},\nasync (input) => {\n  // TODO: Replace with a real WhatsApp API provider if needed. This is a mock implementation.\n  console.log(`Sending message to WhatsApp number ${input.phoneNumber}: ${input.message}`);\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  // Simulate a successful API call\n  return true;\n});\n\n\nconst summarizePrayerScheduleAndSendWhatsappFlow = ai.defineFlow(\n  {\n    name: 'summarizePrayerScheduleAndSendWhatsappFlow',\n    inputSchema: SummarizePrayerScheduleAndSendWhatsappInputSchema,\n    outputSchema: SummarizePrayerScheduleAndSendWhatsappOutputSchema,\n  },\n  async input => {\n    const {output: summary} = await summarizePrayerSchedulePrompt(input);\n\n    if (!summary) {\n        return {\n          success: false,\n          message: 'Falha ao gerar o resumo da escala de oração.',\n        };\n    }\n\n    try {\n      const success = await sendWhatsappMessage({\n        phoneNumber: input.whatsappNumber,\n        message: summary,\n      });\n\n      if (success) {\n        return {\n          success: true,\n          message: 'Resumo da escala de oração enviado com sucesso para o WhatsApp.',\n        };\n      } else {\n        return {\n          success: false,\n          message: 'Falha ao enviar o resumo da escala de oração para o WhatsApp.',\n        };\n      }\n    } catch (error: any) {\n      console.error('Error sending WhatsApp message:', error);\n      return {\n        success: false,\n        message: `Falha ao enviar o resumo da escala de oração para o WhatsApp: ${error.message}`,\n      };\n    }\n  }\n);\n"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;AAE9C;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oDAAoD,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjE,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGA,MAAM,qDAAqD,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClE,SAAS,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,uCAAuC,KAAkD;IAC7G,OAAO,2CAA2C;AACpD;AAEA,MAAM,gCAAgC,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACpD,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiD;IACjE,QAAQ;QAAC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAE;IAC3B,QAAQ,CAAC;;;;sDAI2C,CAAC;AACvD;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IACxC,MAAM;IACN,aAAa;IACb,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACpB,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACjC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B;IACA,cAAc,uIAAA,CAAA,IAAC,CAAC,OAAO;AACzB,GACA,OAAO;IACL,4FAA4F;IAC5F,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,MAAM,WAAW,CAAC,EAAE,EAAE,MAAM,OAAO,EAAE;IACvF,yBAAyB;IACzB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,iCAAiC;IACjC,OAAO;AACT;AAGA,MAAM,6CAA6C,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9D;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,QAAQ,OAAO,EAAC,GAAG,MAAM,8BAA8B;IAE9D,IAAI,CAAC,SAAS;QACV,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACJ;IAEA,IAAI;QACF,MAAM,UAAU,MAAM,oBAAoB;YACxC,aAAa,MAAM,cAAc;YACjC,SAAS;QACX;QAEA,IAAI,SAAS;YACX,OAAO;gBACL,SAAS;gBACT,SAAS;YACX;QACF,OAAO;YACL,OAAO;gBACL,SAAS;gBACT,SAAS;YACX;QACF;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;YACL,SAAS;YACT,SAAS,CAAC,8DAA8D,EAAE,MAAM,OAAO,EAAE;QAC3F;IACF;AACF;;;IA1EoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {summarizePrayerScheduleAndSendWhatsapp as '40668ad00def5b629761a47ded4440333cc6c83969'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/prayer-schedule.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PrayerSchedule = registerClientReference(\n    function() { throw new Error(\"Attempted to call PrayerSchedule() from the server but PrayerSchedule is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/prayer-schedule.tsx <module evaluation>\",\n    \"PrayerSchedule\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oEACA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/prayer-schedule.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PrayerSchedule = registerClientReference(\n    function() { throw new Error(\"Attempted to call PrayerSchedule() from the server but PrayerSchedule is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/prayer-schedule.tsx\",\n    \"PrayerSchedule\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gDACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { Church } from \"lucide-react\";\nimport { PrayerSchedule } from \"@/components/prayer-schedule\";\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col items-center min-h-screen p-4 sm:p-6 lg:p-8 font-body\">\n      <header className=\"w-full max-w-5xl mb-8 text-center\">\n        <div className=\"inline-flex items-center gap-4\">\n          <Church className=\"w-10 h-10 text-primary\" />\n          <h1 className=\"text-4xl md:text-5xl font-headline font-bold text-primary tracking-tight\">\n            Torre de Oração\n          </h1>\n          <Church className=\"w-10 h-10 text-primary\" />\n        </div>\n        <p className=\"text-muted-foreground mt-2 text-lg\">\n          Selecione um dia e um horário para participar da nossa corrente de oração.\n        </p>\n      </header>\n      <main className=\"w-full max-w-5xl\">\n        <PrayerSchedule />\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAG,WAAU;0CAA2E;;;;;;0CAGzF,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;;;;;;;kCAEpB,8OAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;0BAIpD,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,wIAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}